variables: secretfile.yml

templates:
  ####################
  # YAML anchors. 
  ####################

  # This takes advantage of the fact that flexget doesn't validate anything prefixed with an underscore
  anchors:
    # anchor for tranmission config so it can be used with both transmission and clean_transmission
    _transmission: &transmission
      enabled: yes
      host: '{? transmission.host ?}'
      port: 9091
      username: '{? transmission.username  ?}'
      password: '{? transmission.password  ?}'

    # filesystem "from" achors
    _fs_base_movies: &fs-base-movies
      path: /mnt/drobo/downloads/movies/
      recursive: yes

    _fs_base_tv: &fs-base-tv
      path: /mnt/drobo/downloads/tv/
      recursive: yes

    _fs_base_tv_temp: &fs-base-tv-temp
      path: /mnt/drobo/downloads/tv_temp/
      recursive: yes

    # filesystem "to" anchors
    _tv_temp_path: &tv-temp-path
      to: '/mnt/drobo/downloads/tv_temp/'

    _movies_path: &movies-path
      to: '/mnt/drobo/movies/'

    _series_path: &series-path
      to: '/mnt/drobo/tv/{{series_name}}/Season {{series_season}}/'

    # credentials anchors
    _trakt_credentials: &trakt-credentials
        username: '{? trakt.username ?}'
        account: '{? trakt.account ?}'

    _iptorrents_credentials: &iptorrents-credentials
      rss_key: '{? iptorrents.rss_key ?}'
      uid: '{? iptorrents.uid ?}'
      password: '{? iptorrents.password ?}'

    # misc regexes
    _archive_regex: &archive-regex
      regexp: '.*\.(rar|r0+[01]|zip)$'

    _video_regex: &video-regex
      regexp: '.*\.(mkv|avi|mp4|mpg|mov|m4v)$'
 
    _reject_sample: &reject-sample
      regexp:
        reject:
          - sample

  # Trakt templates
  # These first two are useful both as full templates and as anchors
  series-trakt-list: &series-trakt-list
    trakt_list:
      <<: *trakt-credentials
      list: 'TV Queue'
      type: shows
      strip_dates: yes

  movies-trakt-list: &movies-trakt-list
    trakt_list:
      <<: *trakt-credentials
      list: 'movie queue'
      type: movies

  trakt-lookup:
    trakt_lookup:
      <<: *trakt-credentials

  # pushbullet notification templates
  series-notify:
    notify:
      entries:
        title: 'New Episode'
        message: '{{series_name}} season {{series_season}} episode {{series_episode}}'
        via:
          - pushbullet:
              api_key: '{? pushbullet.apikey ?}'

  movies-notify:
    notify:
      entries:
        title: 'New Movie'
        message: '{{title}}'
        via:
          - pushbullet:
              api_key: '{? pushbullet.apikey ?}'

  # exclude torrents with undesirable files
  content-rejects:
    content_filter:
      reject:
        - 'password.txt'
        - '*.wmv'
        - '*.avi'

  # Settings for all series-related file system tasks
  series-copy:
    all_series:
      parse_only: yes

  # Settings for all file system tasks
  fs-task:
    accept_all: yes
    seen: local
    no_entries_ok: yes

  # Clean up series names for consistency when copying
  clean-series_name:
    manipulate:
      - series_name: 
          phase: filter
          replace:
            regexp: "['\\.,!]+" # remove commas and apostrophes
            format: ""

schedules:
  - tasks: ['series-trakt-set-begin', 'series-discover', 'series-trakt-clean', 'movies-trakt-list', 'movies-discover', 'movies-trakt-clean']
    interval:
      hours: 1
  - tasks: ['series-file-copy', 'series-file-decompress', 'series-file-move-temp', 'movies-file-decompress', 'movies-file-copy']
    interval:
      minutes: 10
  - tasks: 'transmission-clean'
    interval:
      minutes: 30

web_server:
  bind: 127.0.0.1
  port: 5050

tasks:

  ####################
  # TV tasks
  ####################

  # Get the next episode from Trakt and set it as the beginning for the series plugin
  # I use Plex-Trakt-Scrobbler to sync what I've collected
  series-trakt-set-begin:
    priority: 1
    next_trakt_episodes:
      <<: *trakt-credentials
      list: 'TV Queue'
      strip_dates: yes
      context: collected
      position: next
    accept_all: yes
    set_series_begin: yes
    disable: seen

  # Discover series and add them to Transmission
  series-discover:
    priority: 100
    template: content-rejects
    configure_series:
      from:
        <<: *series-trakt-list
      settings:
        quality: 720p+
        identified_by: ep
        exact: no
    discover:
      what:
        - next_series_episodes: yes
      from:
        - iptorrents: 
            <<: *iptorrents-credentials
            category: 
              - TV-x264
              - TV-Web-DL 
        - freshon:
            username: '{? freshon.username ?}'
            password: '{? freshon.password ?}'
            passkey: '{? freshon.passkey ?}'
            category: hd
    transmission: 
      <<: *transmission
      ratio: 5
      path: '/mnt/drobo/downloads/tv/'

  # Extract then move archive contents separately. Workaround because the people who
  # post DC shows on iptorrents like to make "jokes" with their file names
  series-file-decompress:
    priority: 103
    template: fs-task
    filesystem:
      <<: *fs-base-tv
      <<: *archive-regex
    archives: yes
    decompress:
      keep_dirs: no
      <<: *tv-temp-path
      <<: *video-regex

  series-file-move-temp:
    priority: 104
    template: [series-notify, series-copy, fs-task, clean-series_name]
    filesystem:
      <<: *fs-base-tv-temp
    move:
      <<: *series-path

  series-file-copy:
    priority: 104
    template: [series-notify, series-copy, fs-task, clean-series_name]
    filesystem:
      <<: *fs-base-tv
      <<: *video-regex
    <<: *reject-sample
    copy:
      <<: *series-path

  # Remove discontinued series from Trakt
  series-trakt-clean:
    priority: 107
    template: series-trakt-list
    disable: seen
    if:
      - trakt_collected and (trakt_series_status in ('ended', 'cancelled')): accept
    list_remove:
      - <<: *series-trakt-list

  ####################
  # Movie tasks
  ####################

  # Get movies from my queue and add them to my FlexGet movie list
  movies-trakt-list:
    priority: 108
    template: movies-trakt-list
    no_entries_ok: yes
    accept_all: yes
    list_add:
      - movie_list: 'movie-queue'

  # discover movies from movie-queue and add them to transmission
  movies-discover:
    priority: 109
    template: [trakt-lookup, content-rejects]
    no_entries_ok: yes
    discover:
      what:
        - movie_list: 'movie-queue'
      from:
        - iptorrents: 
            <<: *iptorrents-credentials
            category: 
              - Movie-BD-Rip
              - Movie-HD-Bluray
    seen_movies:
      scope: local
      matching: strict
    content_size:
      min: 1024
      max: 10000
    quality: 720p+ bluray
    accept_all: yes
    transmission: 
      <<: *transmission
      ratio: 5
      path: '/mnt/drobo/downloads/movies/'

  # Copy or decompress movies
  movies-file-decompress:
    priority: 103
    template: [fs-task, movies-notify]
    filesystem:
      <<: *fs-base-movies
      <<: *archive-regex
    archives: yes
    decompress:
      keep_dirs: no
      <<: *movies-path
      <<: *video-regex

  movies-file-copy:
    priority: 106
    template: [fs-task, movies-notify]
    filesystem:
      <<: *fs-base-movies
      <<: *video-regex
    <<: *reject-sample
    copy:
      <<: *movies-path

  # Remove downloaded movies from Trakt movie queue
  movies-trakt-clean:
    priority: 110
    template: [trakt-lookup, movies-trakt-list]
    disable: [seen, movie_queue]
    if:
      - trakt_collected: accept
    list_remove:
      - movie_list: 'movie-queue'
      - <<: *movies-trakt-list

  ####################
  # General maintenance
  ####################

  transmission-clean:
    priority: 999
    disable: details
    no_entries_ok: yes
    clean_transmission:
      <<: *transmission
      min_ratio: 5
      delete_files: yes
      finished_for: 14 days
      directories:
        - "/mnt/drobo/downloads/tv/.*"
        - "/mnt/drobo/downloads/movies/.*"
